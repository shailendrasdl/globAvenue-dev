import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { MatSliderModule } from '@angular/material/slider';
import { MatVideoSourceDirective } from './directives/mat-video-source.directive';
import { MatVideoTrackDirective } from './directives/mat-video-track.directive';
import { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';
import { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';
import { EventService } from './services/event.service';
import { FullscreenService } from './services/fullscreen.service';
import { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';
import { MatFrameByFrameControlComponent } from './ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component';
import { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';
import { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';
import { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';
import { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';
import { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';
import { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';
import { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';
import { MatVideoComponent } from './video.component';
let MatVideoModule = class MatVideoModule {
};
MatVideoModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            SecondsToTimePipe,
            MatVideoComponent,
            MatSliderProgressBarComponent,
            MatPlayButtonComponent,
            MatVolumeControlComponent,
            MatDownloadButtonComponent,
            MatFullscreenButtonComponent,
            MatTimeControlComponent,
            MatQualityControlComponent,
            MatVideoSpinnerComponent,
            MatSeekProgressControlComponent,
            MatVideoSourceDirective,
            MatVideoTrackDirective,
            MatFrameByFrameControlComponent
        ],
        imports: [
            CommonModule,
            MatIconModule,
            MatButtonModule,
            MatSliderModule,
        ],
        exports: [
            MatVideoComponent,
            MatVideoSourceDirective,
            MatVideoTrackDirective
        ],
        providers: [
            FullscreenService,
            EventService
        ]
    })
], MatVideoModule);
export { MatVideoModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlkZW8ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbWF0LXZpZGVvLyIsInNvdXJjZXMiOlsiYXBwL3ZpZGVvL3ZpZGVvLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFM0QsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDaEYsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sc0VBQXNFLENBQUM7QUFDckgsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDakUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ3BHLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHNFQUFzRSxDQUFDO0FBQ3ZILE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQzFHLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3hGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ3BHLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQ3JILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLG9EQUFvRCxDQUFDO0FBQzlGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBbUN0RCxJQUFhLGNBQWMsR0FBM0IsTUFBYSxjQUFjO0NBQUksQ0FBQTtBQUFsQixjQUFjO0lBakMxQixRQUFRLENBQUM7UUFDTixZQUFZLEVBQUU7WUFDVixpQkFBaUI7WUFDakIsaUJBQWlCO1lBQ2pCLDZCQUE2QjtZQUM3QixzQkFBc0I7WUFDdEIseUJBQXlCO1lBQ3pCLDBCQUEwQjtZQUMxQiw0QkFBNEI7WUFDNUIsdUJBQXVCO1lBQ3ZCLDBCQUEwQjtZQUMxQix3QkFBd0I7WUFDeEIsK0JBQStCO1lBQy9CLHVCQUF1QjtZQUN2QixzQkFBc0I7WUFDdEIsK0JBQStCO1NBQ2xDO1FBQ0QsT0FBTyxFQUFFO1lBQ0wsWUFBWTtZQUNaLGFBQWE7WUFDYixlQUFlO1lBQ2YsZUFBZTtTQUNsQjtRQUNELE9BQU8sRUFBRTtZQUNMLGlCQUFpQjtZQUNqQix1QkFBdUI7WUFDdkIsc0JBQXNCO1NBQ3pCO1FBQ0QsU0FBUyxFQUFFO1lBQ1AsaUJBQWlCO1lBQ2pCLFlBQVk7U0FDZjtLQUNKLENBQUM7R0FDVyxjQUFjLENBQUk7U0FBbEIsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5pbXBvcnQgeyBNYXRTbGlkZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zbGlkZXInO1xyXG5cclxuaW1wb3J0IHsgTWF0VmlkZW9Tb3VyY2VEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvbWF0LXZpZGVvLXNvdXJjZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBNYXRWaWRlb1RyYWNrRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL21hdC12aWRlby10cmFjay5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBNYXRTbGlkZXJQcm9ncmVzc0JhckNvbXBvbmVudCB9IGZyb20gJy4vaW50ZXJuYWwvbWF0LXNsaWRlci1wcm9ncmVzcy1iYXIvbWF0LXNsaWRlci1wcm9ncmVzcy1iYXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2Vjb25kc1RvVGltZVBpcGUgfSBmcm9tICcuL3BpcGVzL3NlY29uZHMtdG8tdGltZS5waXBlJztcclxuaW1wb3J0IHsgRXZlbnRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9ldmVudC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRnVsbHNjcmVlblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2Z1bGxzY3JlZW4uc2VydmljZSc7XHJcbmltcG9ydCB7IE1hdERvd25sb2FkQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi91aS9tYXQtZG93bmxvYWQtYnV0dG9uL21hdC1kb3dubG9hZC1idXR0b24uY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWF0RnJhbWVCeUZyYW1lQ29udHJvbENvbXBvbmVudCB9IGZyb20gJy4vdWkvbWF0LWZyYW1lLWJ5LWZyYW1lLWNvbnRyb2wvbWF0LWZyYW1lLWJ5LWZyYW1lLWNvbnRyb2wuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWF0RnVsbHNjcmVlbkJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vdWkvbWF0LWZ1bGxzY3JlZW4tYnV0dG9uL21hdC1mdWxsc2NyZWVuLWJ1dHRvbi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNYXRQbGF5QnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi91aS9tYXQtcGxheS1idXR0b24vbWF0LXBsYXktYnV0dG9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1hdFF1YWxpdHlDb250cm9sQ29tcG9uZW50IH0gZnJvbSAnLi91aS9tYXQtcXVhbGl0eS1jb250cm9sL21hdC1xdWFsaXR5LWNvbnRyb2wuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWF0U2Vla1Byb2dyZXNzQ29udHJvbENvbXBvbmVudCB9IGZyb20gJy4vdWkvbWF0LXNlZWstcHJvZ3Jlc3MtY29udHJvbC9tYXQtc2Vlay1wcm9ncmVzcy1jb250cm9sLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1hdFRpbWVDb250cm9sQ29tcG9uZW50IH0gZnJvbSAnLi91aS9tYXQtdGltZS1jb250cm9sL21hdC10aW1lLWNvbnRyb2wuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWF0VmlkZW9TcGlubmVyQ29tcG9uZW50IH0gZnJvbSAnLi91aS9tYXQtdmlkZW8tc3Bpbm5lci9tYXQtdmlkZW8tc3Bpbm5lci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNYXRWb2x1bWVDb250cm9sQ29tcG9uZW50IH0gZnJvbSAnLi91aS9tYXQtdm9sdW1lLWNvbnRyb2wvbWF0LXZvbHVtZS1jb250cm9sLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1hdFZpZGVvQ29tcG9uZW50IH0gZnJvbSAnLi92aWRlby5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIFNlY29uZHNUb1RpbWVQaXBlLFxyXG4gICAgICAgIE1hdFZpZGVvQ29tcG9uZW50LFxyXG4gICAgICAgIE1hdFNsaWRlclByb2dyZXNzQmFyQ29tcG9uZW50LFxyXG4gICAgICAgIE1hdFBsYXlCdXR0b25Db21wb25lbnQsXHJcbiAgICAgICAgTWF0Vm9sdW1lQ29udHJvbENvbXBvbmVudCxcclxuICAgICAgICBNYXREb3dubG9hZEJ1dHRvbkNvbXBvbmVudCxcclxuICAgICAgICBNYXRGdWxsc2NyZWVuQnV0dG9uQ29tcG9uZW50LFxyXG4gICAgICAgIE1hdFRpbWVDb250cm9sQ29tcG9uZW50LFxyXG4gICAgICAgIE1hdFF1YWxpdHlDb250cm9sQ29tcG9uZW50LFxyXG4gICAgICAgIE1hdFZpZGVvU3Bpbm5lckNvbXBvbmVudCxcclxuICAgICAgICBNYXRTZWVrUHJvZ3Jlc3NDb250cm9sQ29tcG9uZW50LFxyXG4gICAgICAgIE1hdFZpZGVvU291cmNlRGlyZWN0aXZlLFxyXG4gICAgICAgIE1hdFZpZGVvVHJhY2tEaXJlY3RpdmUsXHJcbiAgICAgICAgTWF0RnJhbWVCeUZyYW1lQ29udHJvbENvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIGltcG9ydHM6IFtcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgTWF0SWNvbk1vZHVsZSxcclxuICAgICAgICBNYXRCdXR0b25Nb2R1bGUsXHJcbiAgICAgICAgTWF0U2xpZGVyTW9kdWxlLFxyXG4gICAgXSxcclxuICAgIGV4cG9ydHM6IFtcclxuICAgICAgICBNYXRWaWRlb0NvbXBvbmVudCxcclxuICAgICAgICBNYXRWaWRlb1NvdXJjZURpcmVjdGl2ZSxcclxuICAgICAgICBNYXRWaWRlb1RyYWNrRGlyZWN0aXZlXHJcbiAgICBdLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgRnVsbHNjcmVlblNlcnZpY2UsXHJcbiAgICAgICAgRXZlbnRTZXJ2aWNlXHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNYXRWaWRlb01vZHVsZSB7IH1cclxuIl19