{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://mat-video/app/video/services/event.service.ts","ng://mat-video/app/video/video.component.ts","ng://mat-video/app/video/directives/mat-video-source.directive.ts","ng://mat-video/app/video/directives/mat-video-track.directive.ts","ng://mat-video/app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts","ng://mat-video/app/video/pipes/seconds-to-time.pipe.ts","ng://mat-video/app/video/services/fullscreen.service.ts","ng://mat-video/app/video/ui/mat-download-button/mat-download-button.component.ts","ng://mat-video/app/video/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component.ts","ng://mat-video/app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts","ng://mat-video/app/video/ui/mat-play-button/mat-play-button.component.ts","ng://mat-video/app/video/ui/mat-quality-control/mat-quality-control.component.ts","ng://mat-video/app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts","ng://mat-video/app/video/ui/mat-time-control/mat-time-control.component.ts","ng://mat-video/app/video/ui/mat-video-spinner/mat-video-spinner.component.ts","ng://mat-video/app/video/ui/mat-volume-control/mat-volume-control.component.ts","ng://mat-video/app/video/video.module.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","call","next","value","done","EventService","prototype","addEvents","renderer","events","event_1","dispose","listen","element","name","newEvent","callback","events_1","tslib_1.__values","events_1_1","removeEvents","events_2","events_2_1","event_2","Injectable","MatVideoComponent","evt","this","src","title","autoplay","preload","loop","quality","fullscreen","showFrameByFrame","fps","download","color","spinner","poster","keyboard","overlay","muted","mutedChange","EventEmitter","timeChange","playing","isFullscreen","videoLoaded","isMouseMoving","isMouseMovingTimeout","getVideoTag","currentTime","val","_this","video","duration","lastTime","setTimeout","emit","ngAfterViewInit","nativeElement","event","evLoadedMetadata","console","error","preventDefault","evTimeUpdate","player","evMouseMove","onloadeddata","ngOnDestroy","load","videoWidth","videoHeight","clearTimeout","isMouseMovingTimer","time","getOverlayClass","activeClass","inactiveClass","tslib_1.__decorate","ViewChild","ElementRef","Input","Output","Component","selector","template","Renderer2","MatVideoSourceDirective","matVideoComponent","el","type","init","source","ngOnChanges","changes","Directive","tslib_1.__param","Host","MatVideoTrackDirective","kind","srclang","label","track","sliderprogressbarId","MatSliderProgressBarComponent","_super","elementRef","focusMonitor","changeDetectorRef","dir","tabIndex","mode","_bufferValue","parseInt","__","constructor","create","tslib_1.__extends","v","min","max","Math","clamp","axis","vertical","transform","providers","MAT_SLIDER_VALUE_ACCESSOR","host","(focus)","(blur)","(click)","(mousedown)","(keydown)","(keyup)","(mouseenter)","(slide)","(slideend)","(slidestart)","class","role","[tabIndex]","[attr.aria-disabled]","[attr.aria-valuemax]","[attr.aria-valuemin]","[attr.aria-valuenow]","[attr.aria-orientation]","[class.mat-slider-disabled]","[class.mat-slider-has-ticks]","[class.mat-slider-horizontal]","[class.mat-slider-axis-inverted]","[class.mat-slider-sliding]","[class.mat-slider-thumb-label-showing]","[class.mat-slider-vertical]","[class.mat-slider-min-value]","[class.mat-slider-hide-last-tick]","inputs","changeDetection","ChangeDetectionStrategy","OnPush","Optional","Attribute","FocusMonitor","ChangeDetectorRef","Directionality","String","MatSlider","SecondsToTimePipe","times","year","month","day","hour","seconds","time_string","floor","toString","Pipe","FullscreenService","fnMap","keyboardAllowed","Element","ret","document","fn","request","elem","requestFullscreen","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","exit","exitFullscreen","toggle","onChange","addEventListener","fullscreenchange","onError","fullscreenerror","Boolean","fullscreenElement","isEnabled","fullscreenEnabled","getElement","MatDownloadButtonComponent","HTMLVideoElement","MatFrameByFrameControlComponent","ngOnInit","seekFrames","nbFrames","paused","pause","newPos","MatFullscreenButtonComponent","fscreen","canFullscreen","fullscreenChanged","onChangesFullscreen","setFullscreen","toggleFullscreen","updateFullscreen","onFullscreenKey","HostListener","KeyboardEvent","MatPlayButtonComponent","play","playChanged","setVideoPlayback","toggleVideoPlayback","updateVideoPlayback","onPlayKey","MatQualityControlComponent","MatSeekProgressControlComponent","curTimePercent","bufTimePercent","currentTimeChanged","bufferedTime","bufferedTimeChanged","updateCurrentTime","updateBufferedTime","seekVideo","percentage","newTime","updateTime","buffered","largestBufferValue","cur","start","end","emitter","MatTimeControlComponent","MatVideoSpinnerComponent","videoBuffering","MatVolumeControlComponent","volume","volumeChanged","_muted","mutedChanged","setVolume","setMuted","toggleMuted","updateMuted","onMuteKey","MatVideoModule","NgModule","declarations","imports","CommonModule","MatIconModule","MatButtonModule","MatSliderModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Renderer2 } from '@angular/core';\r\nimport { EventHandler } from '../interfaces/event-handler.interface';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n\r\n    constructor() { }\r\n\r\n    addEvents(renderer: Renderer2, events: EventHandler[]): void {\r\n        for (const event of events)\r\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\r\n    }\r\n\r\n    removeEvents(events: EventHandler[]): void {\r\n        for (const event of events)\r\n            if (event.dispose)\r\n                event.dispose();\r\n    }\r\n\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nimport { EventHandler } from './interfaces/event-handler.interface';\r\nimport { EventService } from './services/event.service';\r\n\r\n@Component({\r\n    selector: 'mat-video',\r\n    templateUrl: './video.component.html',\r\n    styleUrls: ['./video.component.css', './styles/icons.css']\r\n})\r\nexport class MatVideoComponent implements AfterViewInit, OnDestroy {\r\n    @ViewChild('player') private player: ElementRef;\r\n    @ViewChild('video') private video: ElementRef;\r\n\r\n    @Input() src: string = null;\r\n    @Input() title: string = null;\r\n    @Input() autoplay: boolean = false;\r\n    @Input() preload: boolean = true;\r\n    @Input() loop: boolean = false;\r\n    @Input() quality: boolean = true;\r\n    @Input() fullscreen: boolean = true;\r\n    @Input() showFrameByFrame: boolean = false;\r\n    @Input() fps: number = 29.97;\r\n    @Input() download: boolean = false;\r\n    @Input() color: ThemePalette = 'primary';\r\n    @Input() spinner: string = 'spin';\r\n    @Input() poster: string = null;\r\n    @Input() keyboard: boolean = true;\r\n    @Input() overlay: boolean = null;\r\n    @Input() muted: boolean = false;\r\n    @Output() mutedChange = new EventEmitter<boolean>();\r\n\r\n\r\n    @Input()\r\n    get time() {\r\n        return this.getVideoTag().currentTime;\r\n    }\r\n\r\n    @Output() timeChange = new EventEmitter<number>();\r\n    set time(val: number) {\r\n        const video: HTMLVideoElement = this.getVideoTag();\r\n        if (video && val) {\r\n            if (val > video.duration) {\r\n                val = video.duration;\r\n            }\r\n            if (val < 0) {\r\n                val = 0;\r\n            }\r\n            if (val !== video.currentTime) {\r\n                video.currentTime = val;\r\n            }\r\n            if (this.lastTime !== video.currentTime) {\r\n                setTimeout(() => this.timeChange.emit(video.currentTime), 0);\r\n                this.lastTime = video.currentTime;\r\n            }\r\n        }\r\n    }\r\n\r\n    playing: boolean = false;\r\n\r\n    isFullscreen: boolean = false;\r\n\r\n    videoWidth: number;\r\n    videoHeight: number;\r\n    lastTime: number;\r\n\r\n    videoLoaded = false;\r\n\r\n    private isMouseMoving: boolean = false;\r\n    private isMouseMovingTimer: NodeJS.Timer;\r\n    private isMouseMovingTimeout: number = 2000;\r\n\r\n    private events: EventHandler[];\r\n\r\n    constructor(\r\n        private renderer: Renderer2,\r\n        private evt: EventService\r\n    ) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.events = [\r\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\r\n            { element: this.video.nativeElement, name: 'timeupdate', callback: event => this.evTimeUpdate(event), dispose: null },\r\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\r\n        ];\r\n\r\n        this.video.nativeElement.onloadeddata = () => this.videoLoaded = true;\r\n\r\n        this.evt.addEvents(this.renderer, this.events);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.video.nativeElement.onloadeddata = null;\r\n\r\n        this.evt.removeEvents(this.events);\r\n    }\r\n\r\n    load(): void {\r\n        if (this.video && this.video.nativeElement)\r\n            this.video.nativeElement.load();\r\n    }\r\n\r\n    getVideoTag(): HTMLVideoElement | null {\r\n        return this.video && this.video.nativeElement ? this.video.nativeElement as HTMLVideoElement : null;\r\n    }\r\n\r\n    evLoadedMetadata(event: any): void {\r\n        this.videoWidth = this.video.nativeElement.videoWidth;\r\n        this.videoHeight = this.video.nativeElement.videoHeight;\r\n        this.videoLoaded = true;\r\n    }\r\n\r\n    evMouseMove(event: any): void {\r\n        this.isMouseMoving = true;\r\n        clearTimeout(this.isMouseMovingTimer);\r\n        this.isMouseMovingTimer = setTimeout(() => {\r\n            this.isMouseMoving = false;\r\n        }, this.isMouseMovingTimeout);\r\n    }\r\n\r\n    evTimeUpdate(event: any): void {\r\n        this.time = this.getVideoTag().currentTime;\r\n    }\r\n\r\n    getOverlayClass(activeClass: string, inactiveClass: string): any {\r\n        if (this.overlay === null) {\r\n            return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\r\n        } else {\r\n            return this.overlay ? activeClass : inactiveClass;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n  selector: '[matVideoSource]'\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(\n    @Host() private matVideoComponent: MatVideoComponent,\n    private el: ElementRef\n  ) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init)\n      this.video.load();\n  }\n\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { MatVideoComponent } from '../video.component';\r\n\r\n@Directive({\r\n    selector: '[matVideoTrack]'\r\n})\r\nexport class MatVideoTrackDirective implements OnChanges {\r\n    @Input() src: string = null;\r\n    @Input() kind: string = null;\r\n    @Input() srclang: string = null;\r\n    @Input() label: string = null;\r\n\r\n    private init = true;\r\n    private video: MatVideoComponent;\r\n    private track: HTMLTrackElement;\r\n\r\n    constructor(\r\n        @Host() private matVideoComponent: MatVideoComponent,\r\n        private el: ElementRef\r\n    ) {\r\n        this.video = matVideoComponent;\r\n        this.track = el.nativeElement;\r\n        this.init = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.track.src = this.src;\r\n        this.track.kind = this.kind;\r\n        this.track.srclang = this.srclang;\r\n        this.track.label = this.label;\r\n\r\n        if (!this.init)\r\n            this.video.load();\r\n    }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute } from '@angular/core';\r\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from '@angular/material/slider';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\n\r\n/** Counter used to generate unique IDs for progress bars. */\r\nlet sliderprogressbarId = 0;\r\n\r\n@Component({\r\n    selector: 'mat-slider-progress-bar',\r\n    templateUrl: './mat-slider-progress-bar.component.html',\r\n    styleUrls: ['./mat-slider-progress-bar.component.css'],\r\n    providers: [MAT_SLIDER_VALUE_ACCESSOR],\r\n    host: {\r\n        '(focus)': '_onFocus()',\r\n        '(blur)': '_onBlur()',\r\n        '(click)': 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null', // Angular 5/6 support\r\n        '(mousedown)': 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null', // Angular 7 support\r\n        '(keydown)': '_onKeydown($event)',\r\n        '(keyup)': '_onKeyup()',\r\n        '(mouseenter)': '_onMouseenter()',\r\n        '(slide)': '_onSlide($event)',\r\n        '(slideend)': '_onSlideEnd()',\r\n        '(slidestart)': '_onSlideStart($event)',\r\n        'class': 'mat-slider',\r\n        'role': 'slider',\r\n        '[tabIndex]': 'tabIndex',\r\n        '[attr.aria-disabled]': 'disabled',\r\n        '[attr.aria-valuemax]': 'max',\r\n        '[attr.aria-valuemin]': 'min',\r\n        '[attr.aria-valuenow]': 'value',\r\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n        '[class.mat-slider-disabled]': 'disabled',\r\n        '[class.mat-slider-has-ticks]': 'tickInterval',\r\n        '[class.mat-slider-horizontal]': '!vertical',\r\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\r\n        '[class.mat-slider-sliding]': '_isSliding',\r\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\r\n        '[class.mat-slider-vertical]': 'vertical',\r\n        '[class.mat-slider-min-value]': '_isMinValue',\r\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\r\n    },\r\n    inputs: ['disabled', 'color', 'tabIndex'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class MatSliderProgressBarComponent extends MatSlider {\r\n    @Input() mode: string = 'buffer';\r\n    @Input() value: number = 0;\r\n    /** Buffer value of the progress bar. Defaults to zero. */\r\n    @Input()\r\n    get bufferValue(): number { return this._bufferValue; }\r\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\r\n    private _bufferValue: number = 0;\r\n\r\n    /** The id of the progress bar. */\r\n    sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\r\n\r\n    constructor(\r\n        elementRef: ElementRef,\r\n        focusMonitor: FocusMonitor,\r\n        changeDetectorRef: ChangeDetectorRef,\r\n        @Optional() dir: Directionality,\r\n        @Attribute('tabindex') tabIndex: string\r\n    ) {\r\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\r\n        this.tabIndex = parseInt(tabIndex) || 0;\r\n    }\r\n\r\n    /** CSS styles for the track fill element. */\r\n    get _trackBufferStyles(): { [key: string]: string } {\r\n        if (this.mode === 'buffer') {\r\n            const axis = this.vertical ? 'Y' : 'X';\r\n            return {\r\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n/** Clamps a value to be between two numbers, by default 0 and 100. */\r\nfunction clamp(v: number, min = 0, max = 100) {\r\n    return Math.max(min, Math.min(max, v));\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'secondsToTime'\r\n})\r\nexport class SecondsToTimePipe implements PipeTransform {\r\n    times = {\r\n        year: 31557600,\r\n        month: 2629746,\r\n        day: 86400,\r\n        hour: 3600,\r\n    };\r\n\r\n    transform(seconds: number) {\r\n        if (!seconds)\r\n            return '0:00';\r\n        else {\r\n            let time_string: string = '';\r\n            for (const key in this.times) {\r\n                if (Math.floor(seconds / this.times[key]) > 0) {\r\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\r\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\r\n                }\r\n            }\r\n            time_string += Math.floor(seconds / 60).toString() + ':';\r\n            seconds = seconds - 60 * Math.floor(seconds / 60);\r\n            if (Math.floor(seconds) < 10) time_string += '0';\r\n            time_string += Math.floor(seconds).toString();\r\n            return time_string;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FullscreenControls } from '../interfaces/fullscreen-controls.interface';\r\n\r\n@Injectable()\r\nexport class FullscreenService {\r\n\r\n    private fnMap: string[][] = [\r\n        // Object keys\r\n        [\r\n            'requestFullscreen',\r\n            'exitFullscreen',\r\n            'fullscreenElement',\r\n            'fullscreenEnabled',\r\n            'fullscreenchange',\r\n            'fullscreenerror'\r\n        ],\r\n        // New WebKit\r\n        [\r\n            'webkitRequestFullscreen',\r\n            'webkitExitFullscreen',\r\n            'webkitFullscreenElement',\r\n            'webkitFullscreenEnabled',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror'\r\n\r\n        ],\r\n        // Old WebKit (Safari 5.1)\r\n        [\r\n            'webkitRequestFullScreen',\r\n            'webkitCancelFullScreen',\r\n            'webkitCurrentFullScreenElement',\r\n            'webkitCancelFullScreen',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror'\r\n\r\n        ],\r\n        // Mozilla\r\n        [\r\n            'mozRequestFullScreen',\r\n            'mozCancelFullScreen',\r\n            'mozFullScreenElement',\r\n            'mozFullScreenEnabled',\r\n            'mozfullscreenchange',\r\n            'mozfullscreenerror'\r\n        ],\r\n        // MS\r\n        [\r\n            'msRequestFullscreen',\r\n            'msExitFullscreen',\r\n            'msFullscreenElement',\r\n            'msFullscreenEnabled',\r\n            'MSFullscreenChange',\r\n            'MSFullscreenError'\r\n        ]\r\n    ];\r\n\r\n    private fn: FullscreenControls;\r\n    private keyboardAllowed: boolean;\r\n\r\n    constructor() {\r\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\r\n        const ret: any = {};\r\n        let val;\r\n\r\n        for (let i = 0; i < this.fnMap.length; i++) {\r\n            val = this.fnMap[i];\r\n            if (val && val[1] in document) {\r\n                for (i = 0; i < val.length; i++) {\r\n                    // Map everything to the first list of keys\r\n                    ret[this.fnMap[0][i].toString()] = val[i];\r\n                }\r\n                this.fn = ret;\r\n            }\r\n        }\r\n    }\r\n\r\n    public request(elem: any) {\r\n        const request = this.fn.requestFullscreen;\r\n\r\n        elem = elem || document.documentElement;\r\n\r\n        // Work around Safari 5.1 bug: reports support for\r\n        // keyboard in fullscreen even though it doesn't.\r\n        // Browser sniffing, since the alternative with\r\n        // setTimeout is even worse.\r\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\r\n            elem[request]();\r\n        } else {\r\n            elem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\r\n        }\r\n    }\r\n\r\n    public exit() {\r\n        document[this.fn.exitFullscreen]();\r\n    }\r\n\r\n    public toggle(elem: any) {\r\n        if (this.isFullscreen()) {\r\n            this.exit();\r\n        } else {\r\n            this.request(elem);\r\n        }\r\n    }\r\n\r\n    public onChange(callback: any) {\r\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\r\n    }\r\n\r\n    public onError(callback: any) {\r\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\r\n    }\r\n\r\n    public isFullscreen() {\r\n        return Boolean(document[this.fn.fullscreenElement]);\r\n    }\r\n\r\n    public isEnabled() {\r\n        // Coerce to boolean in case of old WebKit\r\n        return Boolean(document[this.fn.fullscreenEnabled]);\r\n    }\r\n\r\n    public getElement() {\r\n        return document[this.fn.fullscreenElement];\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-download-button',\r\n  templateUrl: './mat-download-button.component.html',\r\n  styleUrls: ['./mat-download-button.component.css']\r\n})\r\nexport class MatDownloadButtonComponent {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() title: string;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'mat-frame-by-frame-control',\r\n    templateUrl: './mat-frame-by-frame-control.component.html',\r\n    styleUrls: ['./mat-frame-by-frame-control.component.css']\r\n})\r\nexport class MatFrameByFrameControlComponent implements OnInit {\r\n    @Input() video: HTMLVideoElement;\r\n    @Input() fps: number = 29.97;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    seekFrames(nbFrames: number) {\r\n        if (!this.video.paused) {\r\n            this.video.pause();\r\n        }\r\n\r\n        const currentFrames = this.video.currentTime * this.fps;\r\n        const newPos = ((currentFrames + nbFrames) / this.fps) + 0.00001;\r\n        this.video.currentTime = newPos;\r\n    }\r\n\r\n}\r\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { EventService } from '../../services/event.service';\r\nimport { FullscreenService } from '../../services/fullscreen.service';\r\n\r\n@Component({\r\n  selector: 'mat-fullscreen-button',\r\n  templateUrl: './mat-fullscreen-button.component.html',\r\n  styleUrls: ['./mat-fullscreen-button.component.css']\r\n})\r\nexport class MatFullscreenButtonComponent implements OnInit {\r\n  canFullscreen: boolean = false;\r\n\r\n  @Input() player: HTMLVideoElement;\r\n\r\n  @Input() fullscreen: boolean = false;\r\n\r\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\r\n\r\n  @Input() keyboard: boolean = true;\r\n\r\n  constructor(\r\n    private fscreen: FullscreenService,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.fscreen.isEnabled())\r\n      this.canFullscreen = true;\r\n\r\n    this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\r\n  }\r\n\r\n  setFullscreen(value: boolean) {\r\n    if (this.canFullscreen && this.fullscreen !== value)\r\n      this.toggleFullscreen();\r\n  }\r\n\r\n  toggleFullscreen(): void {\r\n    this.fullscreen = !this.fullscreen;\r\n    this.updateFullscreen();\r\n  }\r\n\r\n  updateFullscreen(): void {\r\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  onChangesFullscreen(value: boolean): void {\r\n    this.fullscreen = value;\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  @HostListener('document:keyup.f', ['$event'])\r\n  onFullscreenKey(event: KeyboardEvent) {\r\n    if (this.keyboard) {\r\n      this.toggleFullscreen();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-play-button',\r\n  templateUrl: './mat-play-button.component.html',\r\n  styleUrls: ['./mat-play-button.component.css']\r\n})\r\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  @Input() play: boolean = false;\r\n\r\n  @Output() playChanged = new EventEmitter<boolean>();\r\n\r\n  @Input() keyboard: boolean = true;\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\r\n      { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  setVideoPlayback(value: boolean) {\r\n    if (this.play !== value)\r\n      this.toggleVideoPlayback();\r\n  }\r\n\r\n  toggleVideoPlayback(): void {\r\n    this.play = !this.play;\r\n    this.updateVideoPlayback();\r\n  }\r\n\r\n  updateVideoPlayback(): void {\r\n    this.play ? this.video.play() : this.video.pause();\r\n    this.playChanged.emit(this.play);\r\n  }\r\n\r\n  @HostListener('document:keyup.space', ['$event'])\r\n  onPlayKey(event: KeyboardEvent) {\r\n    if (this.keyboard) {\r\n      this.toggleVideoPlayback();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-quality-control',\r\n  templateUrl: './mat-quality-control.component.html',\r\n  styleUrls: ['./mat-quality-control.component.css']\r\n})\r\nexport class MatQualityControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-seek-progress-control',\r\n  templateUrl: './mat-seek-progress-control.component.html',\r\n  styleUrls: ['./mat-seek-progress-control.component.css']\r\n})\r\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\r\n  curTimePercent: number = 0;\r\n  bufTimePercent: number = 0;\r\n\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() currentTime: number = 0;\r\n\r\n  @Output() currentTimeChanged = new EventEmitter<number>();\r\n\r\n  @Input() bufferedTime: number = 0;\r\n\r\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\r\n      { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  seekVideo(value: number): void {\r\n    const percentage = value / 100;\r\n    const newTime = this.video.duration * percentage;\r\n    this.video.currentTime = newTime;\r\n  }\r\n\r\n  updateCurrentTime(time: number): void {\r\n    this.currentTime = time;\r\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\r\n  }\r\n\r\n  updateBufferedTime(): void {\r\n    if (this.video.buffered.length > 0) {\r\n      let largestBufferValue = 0;\r\n      for (let i = 0; i < this.video.buffered.length; i++) {\r\n        const cur = this.video.currentTime;\r\n        const start = this.video.buffered.start(i);\r\n        const end = this.video.buffered.end(i);\r\n        if (start <= cur && end > cur && (end - start) > largestBufferValue)\r\n          largestBufferValue = end;\r\n      }\r\n      this.bufferedTime = largestBufferValue;\r\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\r\n    }\r\n  }\r\n\r\n  updateTime(emitter: EventEmitter<number>, time: number): number {\r\n    emitter.emit(time);\r\n    return time / this.video.duration * 100;\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-time-control',\r\n  templateUrl: './mat-time-control.component.html',\r\n  styleUrls: ['./mat-time-control.component.css']\r\n})\r\nexport class MatTimeControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from '@angular/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-video-spinner',\r\n  templateUrl: './mat-video-spinner.component.html',\r\n  styleUrls: [\r\n    './mat-video-spinner.component.scss',\r\n    './indicators/spin.css',\r\n    './indicators/dot.css',\r\n    './indicators/split-ring.css',\r\n    './indicators/hourglass.css'\r\n  ]\r\n})\r\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() spinner: string = 'spin';\r\n\r\n  videoBuffering = false;\r\n  videoLoaded = false;\r\n\r\n  private events: EventHandler[] = [];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n      { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\r\n      { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\r\n      { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\r\n      { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\r\n    ];\r\n\r\n    this.video.onloadeddata = () => this.videoLoaded = true;\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.video.onloadeddata = null;\r\n\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-volume-control',\r\n  templateUrl: './mat-volume-control.component.html',\r\n  styleUrls: ['./mat-volume-control.component.css']\r\n})\r\nexport class MatVolumeControlComponent {\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() volume: number = 1;\r\n\r\n  @Output() volumeChanged = new EventEmitter<number>();\r\n\r\n  private _muted: boolean = false;\r\n  @Input()\r\n  get muted() { return this._muted; }\r\n  set muted(v: boolean) {\r\n    this._muted = v;\r\n    this.video.muted = this._muted;\r\n  }\r\n\r\n  @Output() mutedChanged = new EventEmitter<boolean>();\r\n\r\n  @Input() keyboard: boolean = true;\r\n\r\n  constructor(private evt: EventService) { }\r\n\r\n  setVolume(value: number): void {\r\n    this.volume = value;\r\n    this.video.volume = this.volume;\r\n    this.volumeChanged.emit(this.volume);\r\n\r\n    if (this.volume > 0)\r\n      this.setMuted(false);\r\n  }\r\n\r\n  setMuted(value: boolean): void {\r\n    if (this.muted !== value)\r\n      this.toggleMuted();\r\n  }\r\n\r\n  toggleMuted(): void {\r\n    this.muted = !this.muted;\r\n    this.updateMuted();\r\n  }\r\n\r\n  updateMuted(): void {\r\n    this.video.muted = this.muted;\r\n    this.mutedChanged.emit(this.muted);\r\n  }\r\n\r\n  @HostListener('document:keyup.m', ['$event'])\r\n  onMuteKey(event: KeyboardEvent) {\r\n    if (this.keyboard) {\r\n      this.toggleMuted();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\r\n\r\nimport { MatVideoSourceDirective } from './directives/mat-video-source.directive';\r\nimport { MatVideoTrackDirective } from './directives/mat-video-track.directive';\r\nimport { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\r\nimport { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';\r\nimport { EventService } from './services/event.service';\r\nimport { FullscreenService } from './services/fullscreen.service';\r\nimport { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';\r\nimport { MatFrameByFrameControlComponent } from './ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component';\r\nimport { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';\r\nimport { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';\r\nimport { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';\r\nimport { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';\r\nimport { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';\r\nimport { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';\r\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\r\nimport { MatVideoComponent } from './video.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SecondsToTimePipe,\r\n        MatVideoComponent,\r\n        MatSliderProgressBarComponent,\r\n        MatPlayButtonComponent,\r\n        MatVolumeControlComponent,\r\n        MatDownloadButtonComponent,\r\n        MatFullscreenButtonComponent,\r\n        MatTimeControlComponent,\r\n        MatQualityControlComponent,\r\n        MatVideoSpinnerComponent,\r\n        MatSeekProgressControlComponent,\r\n        MatVideoSourceDirective,\r\n        MatVideoTrackDirective,\r\n        MatFrameByFrameControlComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatSliderModule,\r\n    ],\r\n    exports: [\r\n        MatVideoComponent,\r\n        MatVideoSourceDirective,\r\n        MatVideoTrackDirective\r\n    ],\r\n    providers: [\r\n        FullscreenService,\r\n        EventService\r\n    ]\r\n})\r\nexport class MatVideoModule { }\r\n"]}