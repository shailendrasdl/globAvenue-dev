import { Schema } from 'prosemirror-model';
import * as schemaBasic from 'prosemirror-schema-basic';
import * as schemaList from 'prosemirror-schema-list';
var listGroup = 'block';
var listItem = Object.assign({}, schemaList.listItem, { content: 'paragraph block*' });
var orderedList = Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup });
var bulletList = Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup });
export var nodes = Object.assign({}, schemaBasic.nodes, {
    list_item: listItem,
    ordered_list: orderedList,
    bullet_list: bulletList
});
export var marks = schemaBasic.marks;
export var schema = new Schema({
    marks: marks,
    nodes: nodes
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9zY2hlbWEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzNDLE9BQU8sS0FBSyxXQUFXLE1BQU0sMEJBQTBCLENBQUM7QUFDeEQsT0FBTyxLQUFLLFVBQVUsTUFBTSx5QkFBeUIsQ0FBQztBQUV0RCxJQUFNLFNBQVMsR0FBRyxPQUFPLENBQUM7QUFFMUIsSUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsVUFBVSxDQUFDLFFBQVEsRUFBRSxFQUFFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxDQUFDLENBQUM7QUFDekYsSUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsVUFBVSxDQUFDLFdBQVcsRUFBRSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7QUFDM0csSUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsVUFBVSxDQUFDLFVBQVUsRUFBRSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7QUFFekcsTUFBTSxDQUFDLElBQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQ2hDLEVBQUUsRUFDRixXQUFXLENBQUMsS0FBSyxFQUNqQjtJQUNFLFNBQVMsRUFBRSxRQUFRO0lBQ25CLFlBQVksRUFBRSxXQUFXO0lBQ3pCLFdBQVcsRUFBRSxVQUFVO0NBQ3hCLENBQ0YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDO0FBRXZDLE1BQU0sQ0FBQyxJQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQztJQUMvQixLQUFLLE9BQUE7SUFDTCxLQUFLLE9BQUE7Q0FDTixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdwcm9zZW1pcnJvci1tb2RlbCc7XG5pbXBvcnQgKiBhcyBzY2hlbWFCYXNpYyBmcm9tICdwcm9zZW1pcnJvci1zY2hlbWEtYmFzaWMnO1xuaW1wb3J0ICogYXMgc2NoZW1hTGlzdCBmcm9tICdwcm9zZW1pcnJvci1zY2hlbWEtbGlzdCc7XG5cbmNvbnN0IGxpc3RHcm91cCA9ICdibG9jayc7XG5cbmNvbnN0IGxpc3RJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgc2NoZW1hTGlzdC5saXN0SXRlbSwgeyBjb250ZW50OiAncGFyYWdyYXBoIGJsb2NrKicgfSk7XG5jb25zdCBvcmRlcmVkTGlzdCA9IE9iamVjdC5hc3NpZ24oe30sIHNjaGVtYUxpc3Qub3JkZXJlZExpc3QsIHsgY29udGVudDogJ2xpc3RfaXRlbSsnLCBncm91cDogbGlzdEdyb3VwIH0pO1xuY29uc3QgYnVsbGV0TGlzdCA9IE9iamVjdC5hc3NpZ24oe30sIHNjaGVtYUxpc3QuYnVsbGV0TGlzdCwgeyBjb250ZW50OiAnbGlzdF9pdGVtKycsIGdyb3VwOiBsaXN0R3JvdXAgfSk7XG5cbmV4cG9ydCBjb25zdCBub2RlcyA9IE9iamVjdC5hc3NpZ24oXG4gIHt9LFxuICBzY2hlbWFCYXNpYy5ub2RlcyxcbiAge1xuICAgIGxpc3RfaXRlbTogbGlzdEl0ZW0sXG4gICAgb3JkZXJlZF9saXN0OiBvcmRlcmVkTGlzdCxcbiAgICBidWxsZXRfbGlzdDogYnVsbGV0TGlzdFxuICB9XG4pO1xuXG5leHBvcnQgY29uc3QgbWFya3MgPSBzY2hlbWFCYXNpYy5tYXJrcztcblxuZXhwb3J0IGNvbnN0IHNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICBtYXJrcyxcbiAgbm9kZXNcbn0pO1xuIl19