import { Plugin, PluginKey } from 'prosemirror-state';
import { DecorationSet, Decoration } from 'prosemirror-view';
var DEFAULT_PLACEHOLDER = 'Type Here...';
var PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';
function placeholderPlugin(text) {
    if (text === void 0) { text = DEFAULT_PLACEHOLDER; }
    return new Plugin({
        key: new PluginKey('placeholder'),
        props: {
            decorations: function (state) {
                var doc = state.doc;
                if (doc.childCount === 1 && doc.firstChild.isTextblock && doc.firstChild.content.size === 0) {
                    var placeHolderEl = document.createElement('span');
                    placeHolderEl.classList.add(PLACEHOLDER_CLASSNAME);
                    placeHolderEl.textContent = text;
                    return DecorationSet.create(doc, [Decoration.widget(1, placeHolderEl)]);
                }
                return DecorationSet.empty;
            }
        }
    });
}
export default placeholderPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3Byb3NlbWlycm9yL3BsdWdpbnMvcGxhY2Vob2xkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBZSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTdELElBQU0sbUJBQW1CLEdBQUcsY0FBYyxDQUFDO0FBQzNDLElBQU0scUJBQXFCLEdBQUcsd0JBQXdCLENBQUM7QUFFdkQsU0FBUyxpQkFBaUIsQ0FBQyxJQUFrQztJQUFsQyxxQkFBQSxFQUFBLDBCQUFrQztJQUMzRCxPQUFPLElBQUksTUFBTSxDQUFDO1FBQ2hCLEdBQUcsRUFBRSxJQUFJLFNBQVMsQ0FBQyxhQUFhLENBQUM7UUFDakMsS0FBSyxFQUFFO1lBQ0wsV0FBVyxFQUFYLFVBQVksS0FBa0I7Z0JBQzVCLElBQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUM7Z0JBRXRCLElBQUksR0FBRyxDQUFDLFVBQVUsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxXQUFXLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsRUFBRTtvQkFDM0YsSUFBTSxhQUFhLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztvQkFDckQsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztvQkFDbkQsYUFBYSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7b0JBQ2pDLE9BQU8sYUFBYSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQ3pFO2dCQUVELE9BQU8sYUFBYSxDQUFDLEtBQUssQ0FBQztZQUM3QixDQUFDO1NBQ0Y7S0FDRixDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsZUFBZSxpQkFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBsdWdpbiwgRWRpdG9yU3RhdGUsIFBsdWdpbktleSB9IGZyb20gJ3Byb3NlbWlycm9yLXN0YXRlJztcbmltcG9ydCB7IERlY29yYXRpb25TZXQsIERlY29yYXRpb24gfSBmcm9tICdwcm9zZW1pcnJvci12aWV3JztcblxuY29uc3QgREVGQVVMVF9QTEFDRUhPTERFUiA9ICdUeXBlIEhlcmUuLi4nO1xuY29uc3QgUExBQ0VIT0xERVJfQ0xBU1NOQU1FID0gJ05neEVkaXRvcl9fUGxhY2Vob2xkZXInO1xuXG5mdW5jdGlvbiBwbGFjZWhvbGRlclBsdWdpbih0ZXh0OiBzdHJpbmcgPSBERUZBVUxUX1BMQUNFSE9MREVSKSB7XG4gIHJldHVybiBuZXcgUGx1Z2luKHtcbiAgICBrZXk6IG5ldyBQbHVnaW5LZXkoJ3BsYWNlaG9sZGVyJyksXG4gICAgcHJvcHM6IHtcbiAgICAgIGRlY29yYXRpb25zKHN0YXRlOiBFZGl0b3JTdGF0ZSkge1xuICAgICAgICBjb25zdCBkb2MgPSBzdGF0ZS5kb2M7XG5cbiAgICAgICAgaWYgKGRvYy5jaGlsZENvdW50ID09PSAxICYmIGRvYy5maXJzdENoaWxkLmlzVGV4dGJsb2NrICYmIGRvYy5maXJzdENoaWxkLmNvbnRlbnQuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgIGNvbnN0IHBsYWNlSG9sZGVyRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgICAgcGxhY2VIb2xkZXJFbC5jbGFzc0xpc3QuYWRkKFBMQUNFSE9MREVSX0NMQVNTTkFNRSk7XG4gICAgICAgICAgcGxhY2VIb2xkZXJFbC50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgICAgICAgcmV0dXJuIERlY29yYXRpb25TZXQuY3JlYXRlKGRvYywgW0RlY29yYXRpb24ud2lkZ2V0KDEsIHBsYWNlSG9sZGVyRWwpXSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gRGVjb3JhdGlvblNldC5lbXB0eTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBwbGFjZWhvbGRlclBsdWdpbjtcbiJdfQ==