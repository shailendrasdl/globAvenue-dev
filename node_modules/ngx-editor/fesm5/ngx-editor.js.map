{"version":3,"file":"ngx-editor.js","sources":["ng://ngx-editor/lib/prosemirror/helpers/isMarkActive.ts","ng://ngx-editor/lib/prosemirror/helpers/isNodeActive.ts","ng://ngx-editor/lib/prosemirror/helpers/isListItem.ts","ng://ngx-editor/lib/prosemirror/commands/toggleBlockType.ts","ng://ngx-editor/lib/prosemirror/commands/toggleList.ts","ng://ngx-editor/lib/prosemirror/commands/toggleWrap.ts","ng://ngx-editor/lib/utils/icons/bold.ts","ng://ngx-editor/lib/utils/icons/italic.ts","ng://ngx-editor/lib/utils/icons/code.ts","ng://ngx-editor/lib/utils/icons/ordered_list.ts","ng://ngx-editor/lib/utils/icons/bullet_list.ts","ng://ngx-editor/lib/utils/icons/quote.ts","ng://ngx-editor/lib/utils/icons/index.ts","ng://ngx-editor/lib/utils/flatDeep.ts","ng://ngx-editor/lib/prosemirror/plugins/menu/meta.ts","ng://ngx-editor/lib/prosemirror/plugins/menu/menu.ts","ng://ngx-editor/lib/prosemirror/plugins/menu/MenuBarView.ts","ng://ngx-editor/lib/prosemirror/plugins/menu/index.ts","ng://ngx-editor/lib/prosemirror/plugins/placeholder.ts","ng://ngx-editor/lib/schema.ts","ng://ngx-editor/lib/ngx-editor.service.ts","ng://ngx-editor/lib/ngx-editor.component.ts","ng://ngx-editor/lib/ngx-editor.module.ts","ng://ngx-editor/public_api.ts","ng://ngx-editor/ngx-editor.ts"],"sourcesContent":["import { EditorState } from 'prosemirror-state';\nimport { MarkType } from 'prosemirror-model';\n\nexport const isMarkActive = (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n};\n\nexport default isMarkActive;\n","import { EditorState } from 'prosemirror-state';\nimport { NodeType, ResolvedPos } from 'prosemirror-model';\n\nconst findNodeType = (type: NodeType, $from: ResolvedPos): NodeType | null => {\n  for (let i = $from.depth; i > 0; i--) {\n    if ($from.node(i).type === type) {\n      return $from.node(i).type;\n    }\n  }\n\n  return null;\n};\n\nexport const isNodeActive = (state: EditorState, type: NodeType, attrs = {}): boolean => {\n  const { $from, to } = state.selection;\n\n  const node: NodeType = findNodeType(type, $from);\n\n  if (!Object.entries(attrs).length || !node) {\n    return !!node;\n  }\n\n  return to <= $from.end() && $from.parent.hasMarkup(type, attrs);\n};\n\nexport default isNodeActive;\n","import { Schema, NodeType } from 'prosemirror-model';\n\nexport const isListItem = (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n};\n","import { EditorState, Transaction } from 'prosemirror-state';\nimport { NodeType } from 'prosemirror-model';\nimport { setBlockType } from 'prosemirror-commands';\n\nimport isNodeActive from '../helpers/isNodeActive';\n\nexport const toggleBlockType = (type: NodeType, toggleType: NodeType, attrs = {}) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggleType)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n};\n","import { EditorState, Transaction } from 'prosemirror-state';\nimport { NodeType } from 'prosemirror-model';\nimport { wrapInList, liftListItem } from 'prosemirror-schema-list';\n\nimport { isNodeActive } from '../helpers';\n\nexport const toggleList = (type: NodeType, itemType: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return liftListItem(itemType)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  };\n};\n","import { EditorState, Transaction } from 'prosemirror-state';\nimport { NodeType } from 'prosemirror-model';\nimport { wrapIn, lift } from 'prosemirror-commands';\n\nimport isNodeActive from '../helpers/isNodeActive';\n\nexport const toggleWrap = (type: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch);\n  };\n};\n","/* tslint:disable */\n\nexport default `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n`;\n","export default `\n  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\n","export default `\n<path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\n","export default `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\n","// Icons source: https://material.io/\n\nimport bold from './bold';\nimport italic from './italic';\nimport code from './code';\nimport orderedList from './ordered_list';\nimport bulletList from './bullet_list';\nimport quote from './quote';\n\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\n\nconst icons = {\n  bold,\n  italic,\n  code,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  quote\n};\n\n// Helper function to create menu icons\nexport function getIconSvg(name: string, width = DEFAULT_ICON_WIDTH, height = DEFAULT_ICON_HEIGHT) {\n  const path = icons[name] || '<path></path>';\n\n  return `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"black\"\n    height=${height}\n    width=${width}\n  >\n    ${path}\n  </svg>\n  `;\n}\n","const flatDeep = (arr: any[], d = 1): any[] => {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n};\n\nexport default flatDeep;\n","export interface MenuItemMeta {\n  key: string;\n  i18nKey: string;\n  icon?: string;\n  type: 'mark' | 'node';\n  attrs?: {\n    level?: number\n  };\n}\n\nconst menuItemsMeta: { [key: string]: MenuItemMeta } = {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n};\n\nexport default menuItemsMeta;\n","import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from '../../helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n","import { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nimport { MenuOptions } from '../../../types';\n\nimport { renderMenu } from './menu';\n\nclass MenuBarView {\n  options: MenuOptions;\n  view: EditorView;\n\n  dom: HTMLElement;\n\n  updateMenuItems: (state: EditorState) => void;\n\n  constructor(editorView: EditorView, options: MenuOptions) {\n    // const menu = getMenu(toolbar);\n    this.view = editorView;\n    this.options = options;\n\n    this.render();\n    this.update();\n  }\n\n  render() {\n    const menuDom = document.createElement('div');\n    menuDom.className = 'NgxEditor__MenuBar';\n\n    const { update } = renderMenu(this.options, this.view, menuDom);\n    this.updateMenuItems = update;\n\n    this.view.dom.parentNode.insertBefore(menuDom, this.view.dom);\n  }\n\n  update() {\n    this.updateMenuItems(this.view.state);\n  }\n}\n\nexport default MenuBarView;\n","import { EditorView } from 'prosemirror-view';\nimport { Plugin, PluginKey } from 'prosemirror-state';\n\nimport { Toolbar, MenuLabels, MenuOptions } from '../../../types';\nimport MenuBarView from './MenuBarView';\n\nconst DEFAULT_TOOLBAR: Toolbar = [\n  ['bold', 'italic'],\n  ['code', 'blockquote'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }]\n];\n\nconst DEFAULT_LABELS: MenuLabels = {\n  bold: 'Bold',\n  italics: 'Italics',\n  code: 'Code',\n  ordered_list: 'Ordered List',\n  bullet_list: 'Bullet List',\n  heading: 'Heading',\n  blockquote: 'Quote'\n};\n\nconst DEFAULT_OPTIONS: MenuOptions = {\n  toolbar: DEFAULT_TOOLBAR,\n  labels: DEFAULT_LABELS\n};\n\nfunction menuPlugin(options: MenuOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('menu'),\n    view(editorView: EditorView): MenuBarView {\n      return new MenuBarView(editorView, options);\n    },\n  });\n}\n\nconst menu = (options: MenuOptions = DEFAULT_OPTIONS) => {\n  return menuPlugin(options);\n};\n\nexport default menu;\n","import { Plugin, EditorState, PluginKey } from 'prosemirror-state';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\nconst DEFAULT_PLACEHOLDER = 'Type Here...';\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\n\nfunction placeholderPlugin(text: string = DEFAULT_PLACEHOLDER) {\n  return new Plugin({\n    key: new PluginKey('placeholder'),\n    props: {\n      decorations(state: EditorState) {\n        const doc = state.doc;\n\n        if (doc.childCount === 1 && doc.firstChild.isTextblock && doc.firstChild.content.size === 0) {\n          const placeHolderEl = document.createElement('span');\n          placeHolderEl.classList.add(PLACEHOLDER_CLASSNAME);\n          placeHolderEl.textContent = text;\n          return DecorationSet.create(doc, [Decoration.widget(1, placeHolderEl)]);\n        }\n\n        return DecorationSet.empty;\n      }\n    }\n  });\n}\n\nexport default placeholderPlugin;\n","import { Schema } from 'prosemirror-model';\nimport * as schemaBasic from 'prosemirror-schema-basic';\nimport * as schemaList from 'prosemirror-schema-list';\n\nconst listGroup = 'block';\n\nconst listItem = Object.assign({}, schemaList.listItem, { content: 'paragraph block*' });\nconst orderedList = Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup });\nconst bulletList = Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup });\n\nexport const nodes = Object.assign(\n  {},\n  schemaBasic.nodes,\n  {\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList\n  }\n);\n\nexport const marks = schemaBasic.marks;\n\nexport const schema = new Schema({\n  marks,\n  nodes\n});\n","import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n","import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation, OnInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: 'ngx-editor.component.html',\n  styleUrls: ['ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  private view: EditorView;\n  private onChange: (value: object) => void;\n\n  private config: NgxEditorServiceConfig;\n\n  private editorInitialized = false;\n\n  constructor(ngxEditorService: NgxEditorService) {\n    this.config = ngxEditorService.config;\n  }\n\n  writeValue(value: object | null) {\n    if (!this.editorInitialized) {\n      return;\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(): void { }\n\n  private parseDoc(contentJson: object): ProsemirrorNode {\n    if (!contentJson) {\n      return null;\n    }\n\n    const { schema } = this.config;\n    return schema.nodeFromJSON(contentJson);\n  }\n\n  private updateContent(value: object) {\n    try {\n      const doc = this.parseDoc(value);\n      const state = this.view.state;\n\n      // don't emit if both content is same\n      if (doc !== null && state.doc.eq(doc)) {\n        return;\n      }\n\n      const tr = state.tr;\n      tr.replaceWith(0, state.doc.content.size, doc);\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction) {\n    const { state } = this.view.state.applyTransaction(tr);\n\n    this.view.updateState(state);\n\n    if (tr.docChanged && this.onChange) {\n      const json = state.doc.toJSON();\n      this.onChange(json);\n    }\n  }\n\n  createEditor() {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        schema,\n        plugins\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n\n    this.editorInitialized = true;\n  }\n\n  ngOnInit() {\n    this.createEditor();\n  }\n\n  ngOnDestroy() {\n    this.view.destroy();\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgxEditorComponent } from './ngx-editor.component';\n\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './ngx-editor.service';\nimport { NgxEditorConfig } from './types';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken<NgxEditorConfig>('NgxEditorConfig');\n\n@NgModule({\n  declarations: [NgxEditorComponent],\n  exports: [NgxEditorComponent],\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-editor\n */\n\nexport * from './lib/ngx-editor.component';\nexport * from './lib/ngx-editor.module';\n\nexport * from './lib/schema';\n\nexport * from './lib/prosemirror/plugins';\nexport * from './lib/prosemirror/commands';\nexport * from './lib/prosemirror/helpers';\n\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgxEditorService as ɵb,NgxEditorServiceConfig as ɵa,provideMyServiceOptions as ɵc} from './lib/ngx-editor.service';"],"names":["schemaList.listItem","orderedList","schemaList.orderedList","bulletList","schemaList.bulletList","schemaBasic.nodes","schemaBasic.marks","placeholder"],"mappings":"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"}